## 주제

- 사이트 카페 관리 콘솔 프로그램
    - DB 이용 필수(DB 학습 후 적용)
    - 파일 이용 선택(DB 학습 전 적용) - DB 대체용(DB 학습 전까지)
    - 통신 이용 선택(소켓 통신을 학습 후 적용)

## 핵심 기능

- 회원가입
- 로그인
- 로그아웃
- 관리자
    - 그룹(게시판 카테고리) 등록/수정/삭제
    - 게시판 등록/수정/삭제
- 사용자
    - 게시글 등록
    - 게시글 조회
    - 게시글 수정
    - 게시글 삭제
    

## 팀 활동

- 팀장 선정
    - 프로젝트 전체를 총괄
    - 총대 메고 프로젝트를 다 하는 게 아님. 의견을 수렴하는 역할
- 팀 스터디
    - 횟수
        - 최소 주 1회 이상
    - 장소
        - 평일에 수업 종료 후 강의실에서 진행
        - 팀 별로 알아서 진행. 스터디 카페 등.
    - 방법
        - 코드 리뷰
            - 동일한 문제를 같이 풀고 작성한 본인의 코드 설명 후 다른 팀원들에게 피드백 받기
            - 수업 시간에 강사가 작성한 예제를 선정하여 코드 분석 하기
        - 챕터 스터디
            - 팀원 별로 서로 다른 챕터를 분배하고 맡은 챕터에 대해 돌아가면서 설명하기
            - 팀원 모두 같은 챕터를 공부한 후 한 명씩 돌아가면서 설명하기
        - 프로젝트
            - 진행된 프로젝트를 각자 구현한 부분을 설명
            - 새로운 기능 구현 X, 이미 구현된 기능 설명
    - 회의록 작성
        - 어떤 내용을 스터디를 했는지 간단하게 정리
- 프로젝트
    - 요구 사항 작성
        - 주제와 핵심 기능은 위에 있지만 구체적인 기능을 작성.
        - 예시
            - 회원 가입 시 아이디, 비번을 입력한다
            - 아이디는 영문 3~5자이며, 이미 등록된 아이디는 사용이 불가능하다
    - 역할 분담 및 일정 계획
        - 역할 분담을 하기 위해서는 각 팀원의 수준이 파악되어야 함.(스터디를 통해 확인)
        - 각 팀원이 구현할 기능을 분담
    - 프로젝트 진행
        - 저장소 관리 참고 [링크](https://www.notion.so/Git-a303ca2aa7de4ed7acc1bcb472c056c3?pvs=21)
        - 저장소 생성
            - 팀원 중 한 명의 계정으로 저장소 생성
        - 팀원들 초대
            - Settings > Collaborators 에서 팀원들 초대
        - 각자 클론 및 브랜치 생성
        - 코드 작성
        - 커밋 및 푸쉬
        - 기능 구현 완료 후 병합
    - 중간 확인 사항
        - 일정에 맞게 진행 되고 있는지 확인
        - 누락된 기능이 없는지 확인
        - 병합하고 구현된 기능이 잘 되는지 확인
        - 테스트가 잘 되는지 확인